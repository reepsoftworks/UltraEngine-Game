//========= Copyright Reep Softworks, All rights reserved. ============//
// 
// https://github.com/reepsoftworks/UltraEngine-Game
// This code is free to use for those who wish to develop and ship their 
// commerical or non-commerical game projects using Ultra Engine.
// Do not remove this notice.
// 
//=====================================================================//
#pragma once
#include "UltraEngine.h"

namespace UltraEngine::Game
{
	enum ButtonCode
	{
		BUTTON_INVAILD = -1,
		BUTTON_NONE = 0,

		// Mouse
		BUTTON_MOUSE_LBUTTON = 0x1,
		BUTTON_MOUSE_RBUTTON = 0x2,
		BUTTON_MOUSE_MBUTTON = 4,
		BUTTON_MOUSE_XBUTTON1 = 5,
		BUTTON_MOUSE_XBUTTON2,

		// Keyboard
		BUTTON_FIRST_KEY = 8,
		BUTTON_KEY_BACKSPACE = 8,
		BUTTON_KEY_TAB,
		BUTTON_KEY_ENTER = 13,
		BUTTON_KEY_SHIFT = 16,
		BUTTON_KEY_CONTROL,
		BUTTON_KEY_ALT,
		BUTTON_KEY_CAPSLOCK = 20,
		BUTTON_KEY_ESCAPE = 27,
		BUTTON_KEY_SPACE = 32,
		BUTTON_KEY_PAGEUP = 33,
		BUTTON_KEY_PAGEDOWN = 34,
		BUTTON_KEY_END = 35,
		BUTTON_KEY_HOME = 36,
		BUTTON_KEY_LEFT = 37,
		BUTTON_KEY_UP = 38,
		BUTTON_KEY_RIGHT = 39,
		BUTTON_KEY_DOWN = 40,
		BUTTON_KEY_INSERT = 45,
		BUTTON_KEY_DELETE,
		BUTTON_KEY_D0 = 48,
		BUTTON_KEY_D1 = 49,
		BUTTON_KEY_D2 = 50,
		BUTTON_KEY_D3 = 51,
		BUTTON_KEY_D4 = 52,
		BUTTON_KEY_D5 = 53,
		BUTTON_KEY_D6 = 54,
		BUTTON_KEY_D7 = 55,
		BUTTON_KEY_D8 = 56,
		BUTTON_KEY_D9 = 57,
		BUTTON_KEY_A = 65,
		BUTTON_KEY_B = 66,
		BUTTON_KEY_C = 67,
		BUTTON_KEY_D = 68,
		BUTTON_KEY_E = 69,
		BUTTON_KEY_F = 70,
		BUTTON_KEY_G = 71,
		BUTTON_KEY_H = 72,
		BUTTON_KEY_I = 73,
		BUTTON_KEY_J = 74,
		BUTTON_KEY_K = 75,
		BUTTON_KEY_L = 76,
		BUTTON_KEY_M = 77,
		BUTTON_KEY_N = 78,
		BUTTON_KEY_O = 79,
		BUTTON_KEY_P = 80,
		BUTTON_KEY_Q = 81,
		BUTTON_KEY_R = 82,
		BUTTON_KEY_S = 83,
		BUTTON_KEY_T = 84,
		BUTTON_KEY_U = 85,
		BUTTON_KEY_V = 86,
		BUTTON_KEY_W = 87,
		BUTTON_KEY_X = 88,
		BUTTON_KEY_Y = 89,
		BUTTON_KEY_Z = 90,
		BUTTON_KEY_COMMAND = 91,
		//BUTTON_KEY_WINDOWS = 91,
		BUTTON_KEY_F1 = 112,
		BUTTON_KEY_F2 = 113,
		BUTTON_KEY_F3 = 114,
		BUTTON_KEY_F4 = 115,
		BUTTON_KEY_F5 = 116,
		BUTTON_KEY_F6 = 117,
		BUTTON_KEY_F7 = 118,
		BUTTON_KEY_F8 = 119,
		BUTTON_KEY_F9 = 120,
		BUTTON_KEY_F10 = 121,
		BUTTON_KEY_F11 = 122,
		BUTTON_KEY_F12 = 123,
		BUTTON_KEY_NUMLOCK = 144,
		BUTTON_KEY_SEMICOLON = 186,
		BUTTON_KEY_EQUALS = 187,
		BUTTON_KEY_COMMA = 188,
		BUTTON_KEY_SUBTRACT = 189,
		BUTTON_KEY_PERIOD = 190,
		BUTTON_KEY_SLASH = 191,
		BUTTON_KEY_TILDE = 192,
		BUTTON_KEY_OPENBRACKET = 219,
		BUTTON_KEY_BACKSLASH = 220,
		BUTTON_KEY_CLOSEBRACKET = 221,
		BUTTON_KEY_QUOTES = 222,
		BUTTON_KEY_NUMPAD0 = 96,
		BUTTON_KEY_NUMPAD1,
		BUTTON_KEY_NUMPAD2,
		BUTTON_KEY_NUMPAD3,
		BUTTON_KEY_NUMPAD4,
		BUTTON_KEY_NUMPAD5,
		BUTTON_KEY_NUMPAD6,
		BUTTON_KEY_NUMPAD7,
		BUTTON_KEY_NUMPAD8,
		BUTTON_KEY_NUMPAD9,
		BUTTON_KEY_NUMPADPERIOD = 110,
		BUTTON_KEY_NUMPADDIVIDE = 111,
		BUTTON_KEY_NUMPADMULTIPLY = 106,
		BUTTON_KEY_NUMPADSUBTRACT = 109,
		BUTTON_KEY_NUMPADADDITION = 107,
		BUTTON_LASTKEY = BUTTON_KEY_NUMPADADDITION - 1,

		// Virtual Mouse
		BUTTON_MOUSE_WHEELUP = 257,
		BUTTON_MOUSE_WHEELDOWN,
		BUTTON_MOUSE_WHEELLEFT,
		BUTTON_MOUSE_WHEELRIGHT,
	};

	enum AxisCode
	{
		AXIS_INVAILD = -1,
		AXIS_MOUSE = 0,
	};

	struct ButtonAxis
	{
		ButtonCode up = BUTTON_INVAILD;
		ButtonCode down = BUTTON_INVAILD;
		ButtonCode left = BUTTON_INVAILD;
		ButtonCode right = BUTTON_INVAILD;

		bool empty()
		{
			if (up == BUTTON_INVAILD && down == BUTTON_INVAILD && left == BUTTON_INVAILD && right == BUTTON_INVAILD)
				return true;

			return false;
		}
	};

	extern ButtonCode StringToButtonCode(const String& btnstring);
	extern String ButtonCodeToString(const ButtonCode& btncode);
	extern AxisCode StringToAxisCode(const String& btnstring);
	extern String AxisCodeToString(const AxisCode& btncode);
}